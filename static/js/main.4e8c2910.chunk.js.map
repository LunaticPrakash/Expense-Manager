{"version":3,"sources":["MyComponents/ExpenseItem.js","MyComponents/AllExpenses.js","MyComponents/NewExpense.js","App.js","reportWebVitals.js","index.js"],"names":["ExpenseItem","props","useState","expense","title","setTitle","date","Date","amount","setAmount","day","getDate","month","toLocaleString","year","getFullYear","useEffect","console","log","className","id","onChange","event","attr","target","value","newValue","prompt","editFun","expID","document","getElementById","selectedIndex","selected","disabled","hidden","onClick","window","confirm","deleteFun","AllExpenses","expensesList","expenses","map","editFunc","NewExpense","enteredTitle","settitle","enteredAmount","setamount","enteredDate","setdate","key","data","JSON","parse","localStorage","getItem","length","getExpId","onSubmit","preventDefault","expenseData","Number","isInteger","parseInt","parseFloat","onAddExpense","htmlFor","type","placeholder","required","min","step","App","saveData","setItem","stringify","getData","oldExpenses","setExpenses","findWithAttr","array","i","newExpenseData","a","push","index","item","splice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4e8c2910.chunk.js","sourcesContent":["import \"./ExpenseItem.css\";\nimport { useEffect, useState } from \"react\";\n\nfunction ExpenseItem(props) {\n\n    const [title, setTitle] = useState(props.expense.title);\n    // const [date, setDate] = useState(new Date(props.expense.date));\n    const date = new Date(props.expense.date);\n    const [amount, setAmount] = useState(props.expense.amount);\n\n    const day = date.getDate();\n    const month = date.toLocaleString('default', { month: 'long' });\n    const year = date.getFullYear();\n\n    useEffect(() => {\n        console.log(\"effect()\");\n    }, [])\n\n    const onEditClick = (event) => {\n        const attr = event.target.value;\n        const newValue = prompt(\"Enter new \" + attr);\n        if (newValue) {\n            if (attr === \"title\")\n                setTitle(newValue);\n            else if (attr === \"amount\")\n                setAmount(newValue);\n            props.editFun(props.expense.expID, attr, newValue);\n        }\n\n        document.getElementById(\"drop-down-edit\").selectedIndex = 0;\n    };\n\n    const onDeleteClick = (event) => {\n        const confirmToDelete = window.confirm(\"Are you sure, you want to delete?\")\n        if (confirmToDelete) {\n            props.deleteFun(props.expense);\n        }\n        else\n            console.log(\"Not Deleted\");\n    }\n\n    return (\n        <div className=\"expenseitem__container\">\n            <div className=\"expenseitem__date\">\n                <div className=\"expenseitem__date_month\">{month}</div>\n                <div className=\"expenseitem__date_day\">{day}</div>\n                <div className=\"expenseitem__date_year\">{year}</div>\n            </div>\n            <div className=\"expenseitem__title\">{title}</div>\n            <div className=\"expenseitem__amount\">{\"â‚¹ \" + amount}</div>\n            <div className=\"expenseitem__modify\">\n                {/* <div className=\"expenseitem__edit\" onClick={onEditClick}>Edit</div> */}\n                <select id=\"drop-down-edit\" className=\"expenseitem__edit\" onChange={onEditClick}>\n                    <option id=\"default-drop\" value=\"\" selected disabled hidden>Edit</option>\n                    <option value=\"title\">Title</option>\n                    <option value=\"amount\">Amount</option>\n                </select>\n                <div className=\"expenseitem__delete\" onClick={onDeleteClick}>Delete</div>\n            </div>\n        </div>\n    );\n}\n\nexport default ExpenseItem;","import ExpenseItem from \"./ExpenseItem\";\nimport \"./AllExpenses.css\";\n\nfunction AllExpenses(props) {\n    const expensesList = props.expenses;\n    if (expensesList == null)\n        return (\n            <div>\n                <p>No expense item to see!</p>\n            </div>\n        );\n    return (\n        <div>\n            {\n                expensesList.map((expense) => {\n                    return <ExpenseItem key={expense.expID} expense={expense} editFun={props.editFunc} deleteFun={props.deleteFun}></ExpenseItem>;\n                })\n            }\n        </div>\n    );\n}\n\nexport default AllExpenses;","import \"./NewExpense.css\"\nimport { useState } from 'react';\n\n\nfunction NewExpense(props) {\n\n    const [enteredTitle, settitle] = useState('');\n    const [enteredAmount, setamount] = useState('');\n    const [enteredDate, setdate] = useState('');\n    \n    const getExpId = (key) => {\n        const data = JSON.parse(localStorage.getItem(key));\n        if(data)\n            return data.length;\n        else return 0;    \n    }\n    let expID = getExpId(\"000\");\n\n    const titleHandler = (event) => {\n        settitle(event.target.value);\n    };\n\n    const amountHandler = (event) => {\n        setamount(event.target.value);\n    };\n\n    const dateHandler = (event) => {\n        setdate(event.target.value);\n    };\n\n    const formSubmitHandler = (event) => {\n        event.preventDefault();\n        console.log(\"Form Submitted\")\n        const expenseData = {\n            'expID' : expID++,\n            'title': enteredTitle,\n            'date': new Date(enteredDate),\n            'amount':Number.isInteger(enteredAmount) ? parseInt(enteredAmount) : parseFloat(enteredAmount)\n        };\n        props.onAddExpense(expenseData);\n        settitle('');\n        setamount('');\n        setdate('');\n    };\n\n\n    return (\n        <div className=\"new_expense__container\">\n            <h3 className=\"new_expense__heading\">Add Expense</h3>\n            <form onSubmit={formSubmitHandler} className=\"new_expense__form\">\n                <div className=\"new_expense__title\">\n                    <label htmlFor=\"title\">Title : </label>\n                    <input id=\"title\" type=\"text\" value={enteredTitle} onChange={titleHandler} placeholder=\"Enter title here\" required></input>\n                </div>\n\n                <div className=\"new_expense__amount\">\n                    <label htmlFor=\"amount\">Amount : </label>\n                    <input id=\"amount\" type=\"number\" value={enteredAmount} onChange={amountHandler} min=\"0.1\" step=\"0.001\" placeholder=\"Enter amount in Rupees \" required></input>\n                </div>\n\n                <div className=\"new_expense__date\">\n                    <label htmlFor=\"date\">Date : </label>\n                    <input type=\"date\" value={enteredDate} onChange={dateHandler}></input>\n                </div>\n                <div className=\"new_expense__submit\">\n                    <button id=\"new_expense__btn_submit\" type=\"submit\">Add</button>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default NewExpense;","import './App.css';\nimport { useState } from \"react\";\nimport AllExpenses from \"./MyComponents/AllExpenses\";\nimport NewExpense from \"./MyComponents/NewExpense\";\n\nfunction App() {\n\n  const saveData = (key, data) => {\n    localStorage.setItem(key, JSON.stringify(data));\n    console.log(\"Item Saved\");\n  }\n\n  const getData = (key) => {\n    const data = JSON.parse(localStorage.getItem(key));\n    return data;\n  }\n\n  let oldExpenses = [];\n\n  if (getData(\"000\") == null) {\n    oldExpenses = [];\n  }\n  else {\n    oldExpenses = getData(\"000\");\n  }\n\n  const [expenses, setExpenses] = useState(oldExpenses);\n\n\n  const addExpenseHandler = (newExpenseData) => {\n    const a = [...expenses]\n    a.push(newExpenseData)\n    setExpenses(a);\n    saveData(\"000\", a);\n  };\n\n  function findWithAttr(array, attr, value) {\n    for (var i = 0; i < array.length; i += 1) {\n      if (array[i][attr] === value) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  const deleteExpenseHandler = (item) => {\n    const index = findWithAttr(expenses, \"expID\", item.expID)\n    console.log(\"deleteExpenseHandler() runs\");\n    console.log(\"Index to be deleted= \", index);\n    const a = [...expenses]\n    a.splice(index, 1);\n    setExpenses(a);\n    saveData(\"000\", a);\n  }\n\n  const editExpenseHandler = (expID,attr,value) => {\n    const index = findWithAttr(expenses, \"expID\", expID)\n    expenses[index][attr] = value;\n    setExpenses(expenses);\n    console.log(\"index = \",index);\n    saveData(\"000\", expenses);\n  }\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler}></NewExpense>\n      <AllExpenses expenses={expenses} editFunc={editExpenseHandler} deleteFun={deleteExpenseHandler}></AllExpenses>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}